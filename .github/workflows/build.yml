name: Build Container

on:
    push:
      branches: 
        - main
        - 'feature/**'        
      paths:
          - 'src/**'
          - '.github/workflows/build.yml'
    workflow_dispatch:
env:  
  OCTOPUS_PROJECT_NAME: "Random Quotes"
  OCTOPUS_FEATURE_BRANCH_CHANNEL: Default  
  OCTOPUS_RELEASE_CHANNEL: Release   
  OCTOPUS_SPACE: Default
  OCTOPUS_API_KEY: ${{ secrets.OCTOPUSSERVERAPIKEY }}  
  OCTOPUS_URL: http://bobjwalker.octopus.app

jobs:
    build-and-push-application:
        runs-on: ubuntu-latest        
        strategy:
          matrix:
            dotnet-version: ['8.0.x']
        steps:
            - uses: actions/checkout@v1
              with:
                fetch-depth: '0'
            - name: Setup .NET SDK
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: ${{ matrix.dotnet-version }}
            - name: Install GitVersion
              uses: gittools/actions/gitversion/setup@v0.9.14
              with:
                  versionSpec: 5.x
            
            - id: determine_version
              name: Determine Version
              uses: gittools/actions/gitversion/execute@v0.9.14
              with:
                  additionalArguments: /overrideconfig mode=Mainline
            - name: update tag
              uses: richardsimko/update-tag@v1
              with:
                tag_name: ${{ env.GitVersion_MajorMinorPatch }}.${{ env.GitVersion_PreReleaseNumber || env.GitVersion_PreReleaseTag || github.run_number }}${{ env.GitVersion_PreReleaseLabelWithDash }}
              env: 
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              if: github.ref == 'refs/heads/main'

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKERHUB_PAT_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PAT }}
            - name: install buildx
              id: buildx
              uses: crazy-max/ghaction-docker-buildx@v1
              with:
                version: latest
            - name: build and push website container
              working-directory: src
              run: | 
                  docker buildx build --push --platform linux/amd64,linux/arm64 -f "./RandomQuotes.Web/Dockerfile"  --build-arg APP_VERSION=${{ env.GitVersion_MajorMinorPatch }}.${{ env.GitVersion_PreReleaseNumber || env.GitVersion_PreReleaseTag || github.run_number }} --tag bobjwalker99/randomquotes-k8s:${{ env.GitVersion_MajorMinorPatch }}.${{ env.GitVersion_PreReleaseNumber || env.GitVersion_PreReleaseTag || github.run_number }} --tag bobjwalker99/randomquotes-k8s:latest .                             
        
            - name: push build information to Octopus
              uses: OctopusDeploy/push-build-information-action@v3
              with:
                packages: |            
                  RandomQuotes-K8s
                version: "${{ env.GitVersion_MajorMinorPatch }}.${{ env.GitVersion_PreReleaseNumber || env.GitVersion_PreReleaseTag || github.run_number }}"            
            - name: create release
              uses: OctopusDeploy/create-release-action@v3
              with:
                project: ${{ env.OCTOPUS_PROJECT_NAME }}
                channel: ${{ github.ref == 'refs/heads/main' && env.OCTOPUS_RELEASE_CHANNEL || env.OCTOPUS_FEATURE_BRANCH_CHANNEL }}
                release_number: "${{ env.GitVersion_MajorMinorPatch }}.${{ env.GitVersion_PreReleaseNumber || env.GitVersion_PreReleaseTag || github.run_number }}${{ env.GitVersion_PreReleaseLabelWithDash }}"
                package_version: "${{ env.GitVersion_MajorMinorPatch }}.${{ env.GitVersion_PreReleaseNumber || env.GitVersion_PreReleaseTag || github.run_number }}${{ env.GitVersion_PreReleaseLabelWithDash }}"